<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.sq.mappers.ProxiesPrivMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.sq.entity.ProxiesPriv" >
    <id column="Host" property="host" jdbcType="CHAR" />
    <id column="User" property="user" jdbcType="CHAR" />
    <id column="Proxied_host" property="proxiedHost" jdbcType="CHAR" />
    <id column="Proxied_user" property="proxiedUser" jdbcType="CHAR" />
    <result column="With_grant" property="withGrant" jdbcType="BIT" />
    <result column="Grantor" property="grantor" jdbcType="CHAR" />
    <result column="Timestamp" property="timestamp" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    Host, User, Proxied_host, Proxied_user, With_grant, Grantor, Timestamp
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.example.demo.sq.entity.ProxiesPrivKey" >
    select 
    <include refid="Base_Column_List" />
    from proxies_priv
    where Host = #{host,jdbcType=CHAR}
      and User = #{user,jdbcType=CHAR}
      and Proxied_host = #{proxiedHost,jdbcType=CHAR}
      and Proxied_user = #{proxiedUser,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.demo.sq.entity.ProxiesPrivKey" >
    delete from proxies_priv
    where Host = #{host,jdbcType=CHAR}
      and User = #{user,jdbcType=CHAR}
      and Proxied_host = #{proxiedHost,jdbcType=CHAR}
      and Proxied_user = #{proxiedUser,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.sq.entity.ProxiesPriv" >
    insert into proxies_priv (Host, User, Proxied_host, 
      Proxied_user, With_grant, Grantor, 
      Timestamp)
    values (#{host,jdbcType=CHAR}, #{user,jdbcType=CHAR}, #{proxiedHost,jdbcType=CHAR}, 
      #{proxiedUser,jdbcType=CHAR}, #{withGrant,jdbcType=BIT}, #{grantor,jdbcType=CHAR}, 
      #{timestamp,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.sq.entity.ProxiesPriv" >
    insert into proxies_priv
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="host != null" >
        Host,
      </if>
      <if test="user != null" >
        User,
      </if>
      <if test="proxiedHost != null" >
        Proxied_host,
      </if>
      <if test="proxiedUser != null" >
        Proxied_user,
      </if>
      <if test="withGrant != null" >
        With_grant,
      </if>
      <if test="grantor != null" >
        Grantor,
      </if>
      <if test="timestamp != null" >
        Timestamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="host != null" >
        #{host,jdbcType=CHAR},
      </if>
      <if test="user != null" >
        #{user,jdbcType=CHAR},
      </if>
      <if test="proxiedHost != null" >
        #{proxiedHost,jdbcType=CHAR},
      </if>
      <if test="proxiedUser != null" >
        #{proxiedUser,jdbcType=CHAR},
      </if>
      <if test="withGrant != null" >
        #{withGrant,jdbcType=BIT},
      </if>
      <if test="grantor != null" >
        #{grantor,jdbcType=CHAR},
      </if>
      <if test="timestamp != null" >
        #{timestamp,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.sq.entity.ProxiesPriv" >
    update proxies_priv
    <set >
      <if test="withGrant != null" >
        With_grant = #{withGrant,jdbcType=BIT},
      </if>
      <if test="grantor != null" >
        Grantor = #{grantor,jdbcType=CHAR},
      </if>
      <if test="timestamp != null" >
        Timestamp = #{timestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Host = #{host,jdbcType=CHAR}
      and User = #{user,jdbcType=CHAR}
      and Proxied_host = #{proxiedHost,jdbcType=CHAR}
      and Proxied_user = #{proxiedUser,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.sq.entity.ProxiesPriv" >
    update proxies_priv
    set With_grant = #{withGrant,jdbcType=BIT},
      Grantor = #{grantor,jdbcType=CHAR},
      Timestamp = #{timestamp,jdbcType=TIMESTAMP}
    where Host = #{host,jdbcType=CHAR}
      and User = #{user,jdbcType=CHAR}
      and Proxied_host = #{proxiedHost,jdbcType=CHAR}
      and Proxied_user = #{proxiedUser,jdbcType=CHAR}
  </update>
</mapper>