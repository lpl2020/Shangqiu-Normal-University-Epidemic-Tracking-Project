<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.sq.mappers.YqWxgjCollectionMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.sq.entity.YqWxgjCollection">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="school" jdbcType="VARCHAR" property="school"/>
        <result column="addr" jdbcType="VARCHAR" property="addr"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_no" jdbcType="VARCHAR" property="userNo"/>
        <result column="longitude" jdbcType="DOUBLE" property="longitude"/>
        <result column="dimension" jdbcType="DOUBLE" property="dimension"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
        <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, school, addr, user_name, user_no, longitude, dimension, time, creat_time
  </sql>
    <select id="getXyRyInfo" resultType="java.util.Map">
    SELECT
	longitude AS longitude,
	dimension AS dimension
FROM
	`yq_wxgj_collection`
WHERE
	school = '山东英才学院'
	AND id IN (
	SELECT
		SUBSTRING_INDEX( group_concat( id ORDER BY `time` DESC ), ',', 1 )
	FROM
		yq_wxgj_collection
GROUP BY
	user_no)
  </select>
    <select id="getXyYjInfo" resultType="java.util.Map">
        SELECT
	*
FROM
	((
		SELECT
			0 AS flag,
			user_name AS userName,
			user_no AS userNum,
			addr AS lymc,
			creat_time AS createTime
		FROM
			yq_wxgj_collection
		WHERE
			school = '山东英才学院'
			AND user_no NOT IN (
			SELECT
				user_no
			FROM
				yq_fxhealth_collection AS tmp1
			WHERE
				school = '山东英才学院'
				AND tmp1.heathinfo1 != '00001'
			AND tmp1.id IN ( SELECT SUBSTRING_INDEX( group_concat( id ORDER BY `create_time` DESC ), ',', 1 ) FROM yq_fxhealth_collection WHERE school = '山东英才学院' GROUP BY user_no ))
		ORDER BY
			creat_time DESC
			LIMIT 10
			) UNION ALL
		(
		SELECT
			1 AS flag,
			user_name AS userName,
			user_no AS userNum,
			addr AS lymc,
			creat_time AS createTime
		FROM
			yq_wxgj_collection
		WHERE
			school = '山东英才学院'
			AND user_no IN (
			SELECT
				user_no
			FROM
				yq_fxhealth_collection AS tmp1
			WHERE
			school = '山东英才学院' and tmp1.heathinfo1 != '00001' and tmp1.id IN ( SELECT SUBSTRING_INDEX( group_concat( id ORDER BY `create_time` DESC ), ',', 1 ) FROM yq_fxhealth_collection WHERE school = '山东英才学院' GROUP BY user_no ))
		ORDER BY
			creat_time DESC
			LIMIT 5
		)) tmp
ORDER BY
	createTime ASC
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from yq_wxgj_collection
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from yq_wxgj_collection
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.demo.sq.entity.YqWxgjCollection">
    insert into yq_wxgj_collection (id, school, addr, 
      user_name, user_no, longitude, 
      dimension, time, creat_time
      )
    values (#{id,jdbcType=INTEGER}, #{school,jdbcType=VARCHAR}, #{addr,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{userNo,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, 
      #{dimension,jdbcType=DOUBLE}, #{time,jdbcType=TIMESTAMP}, #{creatTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.example.demo.sq.entity.YqWxgjCollection">
        insert into yq_wxgj_collection
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="school != null">
                school,
            </if>
            <if test="addr != null">
                addr,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userNo != null">
                user_no,
            </if>
            <if test="longitude != null">
                longitude,
            </if>
            <if test="dimension != null">
                dimension,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="creatTime != null">
                creat_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="school != null">
                #{school,jdbcType=VARCHAR},
            </if>
            <if test="addr != null">
                #{addr,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userNo != null">
                #{userNo,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                #{longitude,jdbcType=DOUBLE},
            </if>
            <if test="dimension != null">
                #{dimension,jdbcType=DOUBLE},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="creatTime != null">
                #{creatTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.sq.entity.YqWxgjCollection">
        update yq_wxgj_collection
        <set>
            <if test="school != null">
                school = #{school,jdbcType=VARCHAR},
            </if>
            <if test="addr != null">
                addr = #{addr,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userNo != null">
                user_no = #{userNo,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                longitude = #{longitude,jdbcType=DOUBLE},
            </if>
            <if test="dimension != null">
                dimension = #{dimension,jdbcType=DOUBLE},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="creatTime != null">
                creat_time = #{creatTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.sq.entity.YqWxgjCollection">
    update yq_wxgj_collection
    set school = #{school,jdbcType=VARCHAR},
      addr = #{addr,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_no = #{userNo,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DOUBLE},
      dimension = #{dimension,jdbcType=DOUBLE},
      time = #{time,jdbcType=TIMESTAMP},
      creat_time = #{creatTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>