<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.sq.mappers.YqCityGpsMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.sq.entity.YqCityGps">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="dimension" jdbcType="DOUBLE" property="dimension" />
  </resultMap>
  <sql id="Base_Column_List">
    id, city, longitude, dimension
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yq_city_gps
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from yq_city_gps
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.sq.entity.YqCityGps">
    insert into yq_city_gps (id, city, longitude, 
      dimension)
    values (#{id,jdbcType=INTEGER}, #{city,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, 
      #{dimension,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.sq.entity.YqCityGps">
    insert into yq_city_gps
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="dimension != null">
        dimension,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="dimension != null">
        #{dimension,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.sq.entity.YqCityGps">
    update yq_city_gps
    <set>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="dimension != null">
        dimension = #{dimension,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.sq.entity.YqCityGps">
    update yq_city_gps
    set city = #{city,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DOUBLE},
      dimension = #{dimension,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.demo.sq.entity.YqCityGps">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="dimension" jdbcType="DOUBLE" property="dimension" />
  </resultMap>
  <sql id="Base_Column_List">
    id, city, longitude, dimension
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yq_city_gps
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from yq_city_gps
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.sq.entity.YqCityGps">
    insert into yq_city_gps (id, city, longitude, 
      dimension)
    values (#{id,jdbcType=INTEGER}, #{city,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, 
      #{dimension,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.sq.entity.YqCityGps">
    insert into yq_city_gps
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="dimension != null">
        dimension,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="dimension != null">
        #{dimension,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.sq.entity.YqCityGps">
    update yq_city_gps
    <set>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="dimension != null">
        dimension = #{dimension,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.sq.entity.YqCityGps">
    update yq_city_gps
    set city = #{city,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DOUBLE},
      dimension = #{dimension,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.demo.sq.entity.YqCityGps">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="dimension" jdbcType="DOUBLE" property="dimension" />
  </resultMap>
  <sql id="Base_Column_List">
    id, city, longitude, dimension
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yq_city_gps
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from yq_city_gps
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.sq.entity.YqCityGps">
    insert into yq_city_gps (id, city, longitude, 
      dimension)
    values (#{id,jdbcType=INTEGER}, #{city,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, 
      #{dimension,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.sq.entity.YqCityGps">
    insert into yq_city_gps
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="dimension != null">
        dimension,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="dimension != null">
        #{dimension,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.sq.entity.YqCityGps">
    update yq_city_gps
    <set>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="dimension != null">
        dimension = #{dimension,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.sq.entity.YqCityGps">
    update yq_city_gps
    set city = #{city,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DOUBLE},
      dimension = #{dimension,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>