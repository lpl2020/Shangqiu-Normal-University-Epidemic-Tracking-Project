<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.sq.mappers.SchemaTableStatisticsMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.sq.entity.SchemaTableStatistics" >
    <result column="table_schema" property="tableSchema" jdbcType="VARCHAR" />
    <result column="table_name" property="tableName" jdbcType="VARCHAR" />
    <result column="rows_fetched" property="rowsFetched" jdbcType="BIGINT" />
    <result column="rows_inserted" property="rowsInserted" jdbcType="BIGINT" />
    <result column="rows_updated" property="rowsUpdated" jdbcType="BIGINT" />
    <result column="rows_deleted" property="rowsDeleted" jdbcType="BIGINT" />
    <result column="io_read_requests" property="ioReadRequests" jdbcType="DECIMAL" />
    <result column="io_write_requests" property="ioWriteRequests" jdbcType="DECIMAL" />
    <result column="io_misc_requests" property="ioMiscRequests" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.demo.sq.entity.SchemaTableStatisticsWithBLOBs" extends="BaseResultMap" >
    <result column="total_latency" property="totalLatency" jdbcType="LONGVARCHAR" />
    <result column="fetch_latency" property="fetchLatency" jdbcType="LONGVARCHAR" />
    <result column="insert_latency" property="insertLatency" jdbcType="LONGVARCHAR" />
    <result column="update_latency" property="updateLatency" jdbcType="LONGVARCHAR" />
    <result column="delete_latency" property="deleteLatency" jdbcType="LONGVARCHAR" />
    <result column="io_read" property="ioRead" jdbcType="LONGVARCHAR" />
    <result column="io_read_latency" property="ioReadLatency" jdbcType="LONGVARCHAR" />
    <result column="io_write" property="ioWrite" jdbcType="LONGVARCHAR" />
    <result column="io_write_latency" property="ioWriteLatency" jdbcType="LONGVARCHAR" />
    <result column="io_misc_latency" property="ioMiscLatency" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Blob_Column_List" >
    total_latency, fetch_latency, insert_latency, update_latency, delete_latency, io_read, 
    io_read_latency, io_write, io_write_latency, io_misc_latency
  </sql>
  <insert id="insert" parameterType="com.example.demo.sq.entity.SchemaTableStatisticsWithBLOBs" >
    insert into schema_table_statistics (table_schema, table_name, rows_fetched, 
      rows_inserted, rows_updated, rows_deleted, 
      io_read_requests, io_write_requests, io_misc_requests, 
      total_latency, fetch_latency, insert_latency, 
      update_latency, delete_latency, io_read, 
      io_read_latency, io_write, io_write_latency, 
      io_misc_latency)
    values (#{tableSchema,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, #{rowsFetched,jdbcType=BIGINT}, 
      #{rowsInserted,jdbcType=BIGINT}, #{rowsUpdated,jdbcType=BIGINT}, #{rowsDeleted,jdbcType=BIGINT}, 
      #{ioReadRequests,jdbcType=DECIMAL}, #{ioWriteRequests,jdbcType=DECIMAL}, #{ioMiscRequests,jdbcType=DECIMAL}, 
      #{totalLatency,jdbcType=LONGVARCHAR}, #{fetchLatency,jdbcType=LONGVARCHAR}, #{insertLatency,jdbcType=LONGVARCHAR}, 
      #{updateLatency,jdbcType=LONGVARCHAR}, #{deleteLatency,jdbcType=LONGVARCHAR}, #{ioRead,jdbcType=LONGVARCHAR}, 
      #{ioReadLatency,jdbcType=LONGVARCHAR}, #{ioWrite,jdbcType=LONGVARCHAR}, #{ioWriteLatency,jdbcType=LONGVARCHAR}, 
      #{ioMiscLatency,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.sq.entity.SchemaTableStatisticsWithBLOBs" >
    insert into schema_table_statistics
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tableSchema != null" >
        table_schema,
      </if>
      <if test="tableName != null" >
        table_name,
      </if>
      <if test="rowsFetched != null" >
        rows_fetched,
      </if>
      <if test="rowsInserted != null" >
        rows_inserted,
      </if>
      <if test="rowsUpdated != null" >
        rows_updated,
      </if>
      <if test="rowsDeleted != null" >
        rows_deleted,
      </if>
      <if test="ioReadRequests != null" >
        io_read_requests,
      </if>
      <if test="ioWriteRequests != null" >
        io_write_requests,
      </if>
      <if test="ioMiscRequests != null" >
        io_misc_requests,
      </if>
      <if test="totalLatency != null" >
        total_latency,
      </if>
      <if test="fetchLatency != null" >
        fetch_latency,
      </if>
      <if test="insertLatency != null" >
        insert_latency,
      </if>
      <if test="updateLatency != null" >
        update_latency,
      </if>
      <if test="deleteLatency != null" >
        delete_latency,
      </if>
      <if test="ioRead != null" >
        io_read,
      </if>
      <if test="ioReadLatency != null" >
        io_read_latency,
      </if>
      <if test="ioWrite != null" >
        io_write,
      </if>
      <if test="ioWriteLatency != null" >
        io_write_latency,
      </if>
      <if test="ioMiscLatency != null" >
        io_misc_latency,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tableSchema != null" >
        #{tableSchema,jdbcType=VARCHAR},
      </if>
      <if test="tableName != null" >
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="rowsFetched != null" >
        #{rowsFetched,jdbcType=BIGINT},
      </if>
      <if test="rowsInserted != null" >
        #{rowsInserted,jdbcType=BIGINT},
      </if>
      <if test="rowsUpdated != null" >
        #{rowsUpdated,jdbcType=BIGINT},
      </if>
      <if test="rowsDeleted != null" >
        #{rowsDeleted,jdbcType=BIGINT},
      </if>
      <if test="ioReadRequests != null" >
        #{ioReadRequests,jdbcType=DECIMAL},
      </if>
      <if test="ioWriteRequests != null" >
        #{ioWriteRequests,jdbcType=DECIMAL},
      </if>
      <if test="ioMiscRequests != null" >
        #{ioMiscRequests,jdbcType=DECIMAL},
      </if>
      <if test="totalLatency != null" >
        #{totalLatency,jdbcType=LONGVARCHAR},
      </if>
      <if test="fetchLatency != null" >
        #{fetchLatency,jdbcType=LONGVARCHAR},
      </if>
      <if test="insertLatency != null" >
        #{insertLatency,jdbcType=LONGVARCHAR},
      </if>
      <if test="updateLatency != null" >
        #{updateLatency,jdbcType=LONGVARCHAR},
      </if>
      <if test="deleteLatency != null" >
        #{deleteLatency,jdbcType=LONGVARCHAR},
      </if>
      <if test="ioRead != null" >
        #{ioRead,jdbcType=LONGVARCHAR},
      </if>
      <if test="ioReadLatency != null" >
        #{ioReadLatency,jdbcType=LONGVARCHAR},
      </if>
      <if test="ioWrite != null" >
        #{ioWrite,jdbcType=LONGVARCHAR},
      </if>
      <if test="ioWriteLatency != null" >
        #{ioWriteLatency,jdbcType=LONGVARCHAR},
      </if>
      <if test="ioMiscLatency != null" >
        #{ioMiscLatency,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
</mapper>