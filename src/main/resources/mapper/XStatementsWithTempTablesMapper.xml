<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.sq.mappers.XStatementsWithTempTablesMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.sq.entity.XStatementsWithTempTables" >
    <result column="db" property="db" jdbcType="VARCHAR" />
    <result column="exec_count" property="execCount" jdbcType="BIGINT" />
    <result column="total_latency" property="totalLatency" jdbcType="BIGINT" />
    <result column="memory_tmp_tables" property="memoryTmpTables" jdbcType="BIGINT" />
    <result column="disk_tmp_tables" property="diskTmpTables" jdbcType="BIGINT" />
    <result column="avg_tmp_tables_per_query" property="avgTmpTablesPerQuery" jdbcType="DECIMAL" />
    <result column="tmp_tables_to_disk_pct" property="tmpTablesToDiskPct" jdbcType="DECIMAL" />
    <result column="first_seen" property="firstSeen" jdbcType="TIMESTAMP" />
    <result column="last_seen" property="lastSeen" jdbcType="TIMESTAMP" />
    <result column="digest" property="digest" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.demo.sq.entity.XStatementsWithTempTables" extends="BaseResultMap" >
    <result column="query" property="query" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Blob_Column_List" >
    query
  </sql>
  <insert id="insert" parameterType="com.example.demo.sq.entity.XStatementsWithTempTables" >
    insert into x$statements_with_temp_tables (db, exec_count, total_latency, 
      memory_tmp_tables, disk_tmp_tables, avg_tmp_tables_per_query, 
      tmp_tables_to_disk_pct, first_seen, last_seen, 
      digest, query)
    values (#{db,jdbcType=VARCHAR}, #{execCount,jdbcType=BIGINT}, #{totalLatency,jdbcType=BIGINT}, 
      #{memoryTmpTables,jdbcType=BIGINT}, #{diskTmpTables,jdbcType=BIGINT}, #{avgTmpTablesPerQuery,jdbcType=DECIMAL}, 
      #{tmpTablesToDiskPct,jdbcType=DECIMAL}, #{firstSeen,jdbcType=TIMESTAMP}, #{lastSeen,jdbcType=TIMESTAMP}, 
      #{digest,jdbcType=VARCHAR}, #{query,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.sq.entity.XStatementsWithTempTables" >
    insert into x$statements_with_temp_tables
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="db != null" >
        db,
      </if>
      <if test="execCount != null" >
        exec_count,
      </if>
      <if test="totalLatency != null" >
        total_latency,
      </if>
      <if test="memoryTmpTables != null" >
        memory_tmp_tables,
      </if>
      <if test="diskTmpTables != null" >
        disk_tmp_tables,
      </if>
      <if test="avgTmpTablesPerQuery != null" >
        avg_tmp_tables_per_query,
      </if>
      <if test="tmpTablesToDiskPct != null" >
        tmp_tables_to_disk_pct,
      </if>
      <if test="firstSeen != null" >
        first_seen,
      </if>
      <if test="lastSeen != null" >
        last_seen,
      </if>
      <if test="digest != null" >
        digest,
      </if>
      <if test="query != null" >
        query,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="db != null" >
        #{db,jdbcType=VARCHAR},
      </if>
      <if test="execCount != null" >
        #{execCount,jdbcType=BIGINT},
      </if>
      <if test="totalLatency != null" >
        #{totalLatency,jdbcType=BIGINT},
      </if>
      <if test="memoryTmpTables != null" >
        #{memoryTmpTables,jdbcType=BIGINT},
      </if>
      <if test="diskTmpTables != null" >
        #{diskTmpTables,jdbcType=BIGINT},
      </if>
      <if test="avgTmpTablesPerQuery != null" >
        #{avgTmpTablesPerQuery,jdbcType=DECIMAL},
      </if>
      <if test="tmpTablesToDiskPct != null" >
        #{tmpTablesToDiskPct,jdbcType=DECIMAL},
      </if>
      <if test="firstSeen != null" >
        #{firstSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="lastSeen != null" >
        #{lastSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="digest != null" >
        #{digest,jdbcType=VARCHAR},
      </if>
      <if test="query != null" >
        #{query,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
</mapper>