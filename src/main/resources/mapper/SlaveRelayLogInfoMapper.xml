<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.sq.mappers.SlaveRelayLogInfoMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.sq.entity.SlaveRelayLogInfo" >
    <id column="Channel_name" property="channelName" jdbcType="CHAR" />
    <result column="Number_of_lines" property="numberOfLines" jdbcType="INTEGER" />
    <result column="Relay_log_pos" property="relayLogPos" jdbcType="BIGINT" />
    <result column="Master_log_pos" property="masterLogPos" jdbcType="BIGINT" />
    <result column="Sql_delay" property="sqlDelay" jdbcType="INTEGER" />
    <result column="Number_of_workers" property="numberOfWorkers" jdbcType="INTEGER" />
    <result column="Id" property="id" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.demo.sq.entity.SlaveRelayLogInfoWithBLOBs" extends="BaseResultMap" >
    <result column="Relay_log_name" property="relayLogName" jdbcType="LONGVARCHAR" />
    <result column="Master_log_name" property="masterLogName" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    Channel_name, Number_of_lines, Relay_log_pos, Master_log_pos, Sql_delay, Number_of_workers, 
    Id
  </sql>
  <sql id="Blob_Column_List" >
    Relay_log_name, Master_log_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from slave_relay_log_info
    where Channel_name = #{channelName,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from slave_relay_log_info
    where Channel_name = #{channelName,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.sq.entity.SlaveRelayLogInfoWithBLOBs" >
    insert into slave_relay_log_info (Channel_name, Number_of_lines, Relay_log_pos, 
      Master_log_pos, Sql_delay, Number_of_workers, 
      Id, Relay_log_name, Master_log_name
      )
    values (#{channelName,jdbcType=CHAR}, #{numberOfLines,jdbcType=INTEGER}, #{relayLogPos,jdbcType=BIGINT}, 
      #{masterLogPos,jdbcType=BIGINT}, #{sqlDelay,jdbcType=INTEGER}, #{numberOfWorkers,jdbcType=INTEGER}, 
      #{id,jdbcType=INTEGER}, #{relayLogName,jdbcType=LONGVARCHAR}, #{masterLogName,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.sq.entity.SlaveRelayLogInfoWithBLOBs" >
    insert into slave_relay_log_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="channelName != null" >
        Channel_name,
      </if>
      <if test="numberOfLines != null" >
        Number_of_lines,
      </if>
      <if test="relayLogPos != null" >
        Relay_log_pos,
      </if>
      <if test="masterLogPos != null" >
        Master_log_pos,
      </if>
      <if test="sqlDelay != null" >
        Sql_delay,
      </if>
      <if test="numberOfWorkers != null" >
        Number_of_workers,
      </if>
      <if test="id != null" >
        Id,
      </if>
      <if test="relayLogName != null" >
        Relay_log_name,
      </if>
      <if test="masterLogName != null" >
        Master_log_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="channelName != null" >
        #{channelName,jdbcType=CHAR},
      </if>
      <if test="numberOfLines != null" >
        #{numberOfLines,jdbcType=INTEGER},
      </if>
      <if test="relayLogPos != null" >
        #{relayLogPos,jdbcType=BIGINT},
      </if>
      <if test="masterLogPos != null" >
        #{masterLogPos,jdbcType=BIGINT},
      </if>
      <if test="sqlDelay != null" >
        #{sqlDelay,jdbcType=INTEGER},
      </if>
      <if test="numberOfWorkers != null" >
        #{numberOfWorkers,jdbcType=INTEGER},
      </if>
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="relayLogName != null" >
        #{relayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="masterLogName != null" >
        #{masterLogName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.sq.entity.SlaveRelayLogInfoWithBLOBs" >
    update slave_relay_log_info
    <set >
      <if test="numberOfLines != null" >
        Number_of_lines = #{numberOfLines,jdbcType=INTEGER},
      </if>
      <if test="relayLogPos != null" >
        Relay_log_pos = #{relayLogPos,jdbcType=BIGINT},
      </if>
      <if test="masterLogPos != null" >
        Master_log_pos = #{masterLogPos,jdbcType=BIGINT},
      </if>
      <if test="sqlDelay != null" >
        Sql_delay = #{sqlDelay,jdbcType=INTEGER},
      </if>
      <if test="numberOfWorkers != null" >
        Number_of_workers = #{numberOfWorkers,jdbcType=INTEGER},
      </if>
      <if test="id != null" >
        Id = #{id,jdbcType=INTEGER},
      </if>
      <if test="relayLogName != null" >
        Relay_log_name = #{relayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="masterLogName != null" >
        Master_log_name = #{masterLogName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Channel_name = #{channelName,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.sq.entity.SlaveRelayLogInfoWithBLOBs" >
    update slave_relay_log_info
    set Number_of_lines = #{numberOfLines,jdbcType=INTEGER},
      Relay_log_pos = #{relayLogPos,jdbcType=BIGINT},
      Master_log_pos = #{masterLogPos,jdbcType=BIGINT},
      Sql_delay = #{sqlDelay,jdbcType=INTEGER},
      Number_of_workers = #{numberOfWorkers,jdbcType=INTEGER},
      Id = #{id,jdbcType=INTEGER},
      Relay_log_name = #{relayLogName,jdbcType=LONGVARCHAR},
      Master_log_name = #{masterLogName,jdbcType=LONGVARCHAR}
    where Channel_name = #{channelName,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.sq.entity.SlaveRelayLogInfo" >
    update slave_relay_log_info
    set Number_of_lines = #{numberOfLines,jdbcType=INTEGER},
      Relay_log_pos = #{relayLogPos,jdbcType=BIGINT},
      Master_log_pos = #{masterLogPos,jdbcType=BIGINT},
      Sql_delay = #{sqlDelay,jdbcType=INTEGER},
      Number_of_workers = #{numberOfWorkers,jdbcType=INTEGER},
      Id = #{id,jdbcType=INTEGER}
    where Channel_name = #{channelName,jdbcType=CHAR}
  </update>
</mapper>