<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.sq.mappers.YqCollageConfigureMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.sq.entity.YqCollageConfigure">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="speciality" jdbcType="VARCHAR" property="speciality" />
  </resultMap>
  <sql id="Base_Column_List">
    id, school, college, speciality
  </sql>
  <select id="postGetschoollist" resultType="com.example.demo.sq.entity.YqCollageConfigure">
    SELECT
      school,
      collage AS college,
      speciality AS classes
    FROM
        `yq_collage_configure`
    GROUP BY
        school
  </select>
  <select id="postGetcollagelist" resultType="com.example.demo.sq.entity.YqCollageConfigure">
    SELECT
        school,
        collage AS college,
        speciality AS classes
    FROM
        `yq_collage_configure`
    WHERE
        school = #{schools}
    group by collage
  </select>
  <select id="postpersonallitylist" resultType="com.example.demo.sq.entity.YqCollageConfigure">
    SELECT
        school,
        collage AS college,
        speciality AS classes
    FROM
        `yq_collage_configure`
    WHERE
        school = #{schools}
        AND collage = #{collages}
    GROUP BY
        speciality
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yq_collage_configure
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from yq_collage_configure
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.sq.entity.YqCollageConfigure">
    insert into yq_collage_configure (id, school, college, 
      speciality)
    values (#{id,jdbcType=INTEGER}, #{school,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, 
      #{speciality,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.sq.entity.YqCollageConfigure">
    insert into yq_collage_configure
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="speciality != null">
        speciality,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="speciality != null">
        #{speciality,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.sq.entity.YqCollageConfigure">
    update yq_collage_configure
    <set>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="speciality != null">
        speciality = #{speciality,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.sq.entity.YqCollageConfigure">
    update yq_collage_configure
    set school = #{school,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      speciality = #{speciality,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


</mapper>