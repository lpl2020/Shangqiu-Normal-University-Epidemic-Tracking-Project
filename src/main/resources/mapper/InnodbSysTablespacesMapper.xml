<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.sq.mappers.InnodbSysTablespacesMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.sq.entity.InnodbSysTablespaces" >
    <result column="SPACE" property="space" jdbcType="INTEGER" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="FLAG" property="flag" jdbcType="INTEGER" />
    <result column="FILE_FORMAT" property="fileFormat" jdbcType="VARCHAR" />
    <result column="ROW_FORMAT" property="rowFormat" jdbcType="VARCHAR" />
    <result column="PAGE_SIZE" property="pageSize" jdbcType="INTEGER" />
    <result column="ZIP_PAGE_SIZE" property="zipPageSize" jdbcType="INTEGER" />
    <result column="SPACE_TYPE" property="spaceType" jdbcType="VARCHAR" />
    <result column="FS_BLOCK_SIZE" property="fsBlockSize" jdbcType="INTEGER" />
    <result column="FILE_SIZE" property="fileSize" jdbcType="BIGINT" />
    <result column="ALLOCATED_SIZE" property="allocatedSize" jdbcType="BIGINT" />
  </resultMap>
  <insert id="insert" parameterType="com.example.demo.sq.entity.InnodbSysTablespaces" >
    insert into INNODB_SYS_TABLESPACES (SPACE, NAME, FLAG, 
      FILE_FORMAT, ROW_FORMAT, PAGE_SIZE, 
      ZIP_PAGE_SIZE, SPACE_TYPE, FS_BLOCK_SIZE, 
      FILE_SIZE, ALLOCATED_SIZE)
    values (#{space,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER}, 
      #{fileFormat,jdbcType=VARCHAR}, #{rowFormat,jdbcType=VARCHAR}, #{pageSize,jdbcType=INTEGER}, 
      #{zipPageSize,jdbcType=INTEGER}, #{spaceType,jdbcType=VARCHAR}, #{fsBlockSize,jdbcType=INTEGER}, 
      #{fileSize,jdbcType=BIGINT}, #{allocatedSize,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.sq.entity.InnodbSysTablespaces" >
    insert into INNODB_SYS_TABLESPACES
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="space != null" >
        SPACE,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="flag != null" >
        FLAG,
      </if>
      <if test="fileFormat != null" >
        FILE_FORMAT,
      </if>
      <if test="rowFormat != null" >
        ROW_FORMAT,
      </if>
      <if test="pageSize != null" >
        PAGE_SIZE,
      </if>
      <if test="zipPageSize != null" >
        ZIP_PAGE_SIZE,
      </if>
      <if test="spaceType != null" >
        SPACE_TYPE,
      </if>
      <if test="fsBlockSize != null" >
        FS_BLOCK_SIZE,
      </if>
      <if test="fileSize != null" >
        FILE_SIZE,
      </if>
      <if test="allocatedSize != null" >
        ALLOCATED_SIZE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="space != null" >
        #{space,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="fileFormat != null" >
        #{fileFormat,jdbcType=VARCHAR},
      </if>
      <if test="rowFormat != null" >
        #{rowFormat,jdbcType=VARCHAR},
      </if>
      <if test="pageSize != null" >
        #{pageSize,jdbcType=INTEGER},
      </if>
      <if test="zipPageSize != null" >
        #{zipPageSize,jdbcType=INTEGER},
      </if>
      <if test="spaceType != null" >
        #{spaceType,jdbcType=VARCHAR},
      </if>
      <if test="fsBlockSize != null" >
        #{fsBlockSize,jdbcType=INTEGER},
      </if>
      <if test="fileSize != null" >
        #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="allocatedSize != null" >
        #{allocatedSize,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
</mapper>