<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.sq.mappers.ServersMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.sq.entity.Servers" >
    <id column="Server_name" property="serverName" jdbcType="CHAR" />
    <result column="Host" property="host" jdbcType="CHAR" />
    <result column="Db" property="db" jdbcType="CHAR" />
    <result column="Username" property="username" jdbcType="CHAR" />
    <result column="Password" property="password" jdbcType="CHAR" />
    <result column="Port" property="port" jdbcType="INTEGER" />
    <result column="Socket" property="socket" jdbcType="CHAR" />
    <result column="Wrapper" property="wrapper" jdbcType="CHAR" />
    <result column="Owner" property="owner" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    Server_name, Host, Db, Username, Password, Port, Socket, Wrapper, Owner
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from servers
    where Server_name = #{serverName,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from servers
    where Server_name = #{serverName,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.sq.entity.Servers" >
    insert into servers (Server_name, Host, Db, 
      Username, Password, Port, 
      Socket, Wrapper, Owner)
    values (#{serverName,jdbcType=CHAR}, #{host,jdbcType=CHAR}, #{db,jdbcType=CHAR}, 
      #{username,jdbcType=CHAR}, #{password,jdbcType=CHAR}, #{port,jdbcType=INTEGER}, 
      #{socket,jdbcType=CHAR}, #{wrapper,jdbcType=CHAR}, #{owner,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.sq.entity.Servers" >
    insert into servers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="serverName != null" >
        Server_name,
      </if>
      <if test="host != null" >
        Host,
      </if>
      <if test="db != null" >
        Db,
      </if>
      <if test="username != null" >
        Username,
      </if>
      <if test="password != null" >
        Password,
      </if>
      <if test="port != null" >
        Port,
      </if>
      <if test="socket != null" >
        Socket,
      </if>
      <if test="wrapper != null" >
        Wrapper,
      </if>
      <if test="owner != null" >
        Owner,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="serverName != null" >
        #{serverName,jdbcType=CHAR},
      </if>
      <if test="host != null" >
        #{host,jdbcType=CHAR},
      </if>
      <if test="db != null" >
        #{db,jdbcType=CHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="port != null" >
        #{port,jdbcType=INTEGER},
      </if>
      <if test="socket != null" >
        #{socket,jdbcType=CHAR},
      </if>
      <if test="wrapper != null" >
        #{wrapper,jdbcType=CHAR},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.sq.entity.Servers" >
    update servers
    <set >
      <if test="host != null" >
        Host = #{host,jdbcType=CHAR},
      </if>
      <if test="db != null" >
        Db = #{db,jdbcType=CHAR},
      </if>
      <if test="username != null" >
        Username = #{username,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        Password = #{password,jdbcType=CHAR},
      </if>
      <if test="port != null" >
        Port = #{port,jdbcType=INTEGER},
      </if>
      <if test="socket != null" >
        Socket = #{socket,jdbcType=CHAR},
      </if>
      <if test="wrapper != null" >
        Wrapper = #{wrapper,jdbcType=CHAR},
      </if>
      <if test="owner != null" >
        Owner = #{owner,jdbcType=CHAR},
      </if>
    </set>
    where Server_name = #{serverName,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.sq.entity.Servers" >
    update servers
    set Host = #{host,jdbcType=CHAR},
      Db = #{db,jdbcType=CHAR},
      Username = #{username,jdbcType=CHAR},
      Password = #{password,jdbcType=CHAR},
      Port = #{port,jdbcType=INTEGER},
      Socket = #{socket,jdbcType=CHAR},
      Wrapper = #{wrapper,jdbcType=CHAR},
      Owner = #{owner,jdbcType=CHAR}
    where Server_name = #{serverName,jdbcType=CHAR}
  </update>
</mapper>