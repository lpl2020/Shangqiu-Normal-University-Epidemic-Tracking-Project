<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.sq.mappers.SlaveWorkerInfoMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.sq.entity.SlaveWorkerInfo" >
    <id column="Channel_name" property="channelName" jdbcType="CHAR" />
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="Relay_log_pos" property="relayLogPos" jdbcType="BIGINT" />
    <result column="Master_log_pos" property="masterLogPos" jdbcType="BIGINT" />
    <result column="Checkpoint_relay_log_pos" property="checkpointRelayLogPos" jdbcType="BIGINT" />
    <result column="Checkpoint_master_log_pos" property="checkpointMasterLogPos" jdbcType="BIGINT" />
    <result column="Checkpoint_seqno" property="checkpointSeqno" jdbcType="INTEGER" />
    <result column="Checkpoint_group_size" property="checkpointGroupSize" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.demo.sq.entity.SlaveWorkerInfoWithBLOBs" extends="BaseResultMap" >
    <result column="Relay_log_name" property="relayLogName" jdbcType="LONGVARCHAR" />
    <result column="Master_log_name" property="masterLogName" jdbcType="LONGVARCHAR" />
    <result column="Checkpoint_relay_log_name" property="checkpointRelayLogName" jdbcType="LONGVARCHAR" />
    <result column="Checkpoint_master_log_name" property="checkpointMasterLogName" jdbcType="LONGVARCHAR" />
    <result column="Checkpoint_group_bitmap" property="checkpointGroupBitmap" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    Channel_name, Id, Relay_log_pos, Master_log_pos, Checkpoint_relay_log_pos, Checkpoint_master_log_pos, 
    Checkpoint_seqno, Checkpoint_group_size
  </sql>
  <sql id="Blob_Column_List" >
    Relay_log_name, Master_log_name, Checkpoint_relay_log_name, Checkpoint_master_log_name, 
    Checkpoint_group_bitmap
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="com.example.demo.sq.entity.SlaveWorkerInfoKey" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from slave_worker_info
    where Channel_name = #{channelName,jdbcType=CHAR}
      and Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.demo.sq.entity.SlaveWorkerInfoKey" >
    delete from slave_worker_info
    where Channel_name = #{channelName,jdbcType=CHAR}
      and Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.sq.entity.SlaveWorkerInfoWithBLOBs" >
    insert into slave_worker_info (Channel_name, Id, Relay_log_pos, 
      Master_log_pos, Checkpoint_relay_log_pos, Checkpoint_master_log_pos, 
      Checkpoint_seqno, Checkpoint_group_size, Relay_log_name, 
      Master_log_name, Checkpoint_relay_log_name, 
      Checkpoint_master_log_name, Checkpoint_group_bitmap
      )
    values (#{channelName,jdbcType=CHAR}, #{id,jdbcType=INTEGER}, #{relayLogPos,jdbcType=BIGINT}, 
      #{masterLogPos,jdbcType=BIGINT}, #{checkpointRelayLogPos,jdbcType=BIGINT}, #{checkpointMasterLogPos,jdbcType=BIGINT}, 
      #{checkpointSeqno,jdbcType=INTEGER}, #{checkpointGroupSize,jdbcType=INTEGER}, #{relayLogName,jdbcType=LONGVARCHAR}, 
      #{masterLogName,jdbcType=LONGVARCHAR}, #{checkpointRelayLogName,jdbcType=LONGVARCHAR}, 
      #{checkpointMasterLogName,jdbcType=LONGVARCHAR}, #{checkpointGroupBitmap,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.sq.entity.SlaveWorkerInfoWithBLOBs" >
    insert into slave_worker_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="channelName != null" >
        Channel_name,
      </if>
      <if test="id != null" >
        Id,
      </if>
      <if test="relayLogPos != null" >
        Relay_log_pos,
      </if>
      <if test="masterLogPos != null" >
        Master_log_pos,
      </if>
      <if test="checkpointRelayLogPos != null" >
        Checkpoint_relay_log_pos,
      </if>
      <if test="checkpointMasterLogPos != null" >
        Checkpoint_master_log_pos,
      </if>
      <if test="checkpointSeqno != null" >
        Checkpoint_seqno,
      </if>
      <if test="checkpointGroupSize != null" >
        Checkpoint_group_size,
      </if>
      <if test="relayLogName != null" >
        Relay_log_name,
      </if>
      <if test="masterLogName != null" >
        Master_log_name,
      </if>
      <if test="checkpointRelayLogName != null" >
        Checkpoint_relay_log_name,
      </if>
      <if test="checkpointMasterLogName != null" >
        Checkpoint_master_log_name,
      </if>
      <if test="checkpointGroupBitmap != null" >
        Checkpoint_group_bitmap,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="channelName != null" >
        #{channelName,jdbcType=CHAR},
      </if>
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="relayLogPos != null" >
        #{relayLogPos,jdbcType=BIGINT},
      </if>
      <if test="masterLogPos != null" >
        #{masterLogPos,jdbcType=BIGINT},
      </if>
      <if test="checkpointRelayLogPos != null" >
        #{checkpointRelayLogPos,jdbcType=BIGINT},
      </if>
      <if test="checkpointMasterLogPos != null" >
        #{checkpointMasterLogPos,jdbcType=BIGINT},
      </if>
      <if test="checkpointSeqno != null" >
        #{checkpointSeqno,jdbcType=INTEGER},
      </if>
      <if test="checkpointGroupSize != null" >
        #{checkpointGroupSize,jdbcType=INTEGER},
      </if>
      <if test="relayLogName != null" >
        #{relayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="masterLogName != null" >
        #{masterLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="checkpointRelayLogName != null" >
        #{checkpointRelayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="checkpointMasterLogName != null" >
        #{checkpointMasterLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="checkpointGroupBitmap != null" >
        #{checkpointGroupBitmap,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.sq.entity.SlaveWorkerInfoWithBLOBs" >
    update slave_worker_info
    <set >
      <if test="relayLogPos != null" >
        Relay_log_pos = #{relayLogPos,jdbcType=BIGINT},
      </if>
      <if test="masterLogPos != null" >
        Master_log_pos = #{masterLogPos,jdbcType=BIGINT},
      </if>
      <if test="checkpointRelayLogPos != null" >
        Checkpoint_relay_log_pos = #{checkpointRelayLogPos,jdbcType=BIGINT},
      </if>
      <if test="checkpointMasterLogPos != null" >
        Checkpoint_master_log_pos = #{checkpointMasterLogPos,jdbcType=BIGINT},
      </if>
      <if test="checkpointSeqno != null" >
        Checkpoint_seqno = #{checkpointSeqno,jdbcType=INTEGER},
      </if>
      <if test="checkpointGroupSize != null" >
        Checkpoint_group_size = #{checkpointGroupSize,jdbcType=INTEGER},
      </if>
      <if test="relayLogName != null" >
        Relay_log_name = #{relayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="masterLogName != null" >
        Master_log_name = #{masterLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="checkpointRelayLogName != null" >
        Checkpoint_relay_log_name = #{checkpointRelayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="checkpointMasterLogName != null" >
        Checkpoint_master_log_name = #{checkpointMasterLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="checkpointGroupBitmap != null" >
        Checkpoint_group_bitmap = #{checkpointGroupBitmap,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where Channel_name = #{channelName,jdbcType=CHAR}
      and Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.sq.entity.SlaveWorkerInfoWithBLOBs" >
    update slave_worker_info
    set Relay_log_pos = #{relayLogPos,jdbcType=BIGINT},
      Master_log_pos = #{masterLogPos,jdbcType=BIGINT},
      Checkpoint_relay_log_pos = #{checkpointRelayLogPos,jdbcType=BIGINT},
      Checkpoint_master_log_pos = #{checkpointMasterLogPos,jdbcType=BIGINT},
      Checkpoint_seqno = #{checkpointSeqno,jdbcType=INTEGER},
      Checkpoint_group_size = #{checkpointGroupSize,jdbcType=INTEGER},
      Relay_log_name = #{relayLogName,jdbcType=LONGVARCHAR},
      Master_log_name = #{masterLogName,jdbcType=LONGVARCHAR},
      Checkpoint_relay_log_name = #{checkpointRelayLogName,jdbcType=LONGVARCHAR},
      Checkpoint_master_log_name = #{checkpointMasterLogName,jdbcType=LONGVARCHAR},
      Checkpoint_group_bitmap = #{checkpointGroupBitmap,jdbcType=LONGVARBINARY}
    where Channel_name = #{channelName,jdbcType=CHAR}
      and Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.sq.entity.SlaveWorkerInfo" >
    update slave_worker_info
    set Relay_log_pos = #{relayLogPos,jdbcType=BIGINT},
      Master_log_pos = #{masterLogPos,jdbcType=BIGINT},
      Checkpoint_relay_log_pos = #{checkpointRelayLogPos,jdbcType=BIGINT},
      Checkpoint_master_log_pos = #{checkpointMasterLogPos,jdbcType=BIGINT},
      Checkpoint_seqno = #{checkpointSeqno,jdbcType=INTEGER},
      Checkpoint_group_size = #{checkpointGroupSize,jdbcType=INTEGER}
    where Channel_name = #{channelName,jdbcType=CHAR}
      and Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>