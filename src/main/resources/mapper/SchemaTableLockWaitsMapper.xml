<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.sq.mappers.SchemaTableLockWaitsMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.sq.entity.SchemaTableLockWaits" >
    <result column="object_schema" property="objectSchema" jdbcType="VARCHAR" />
    <result column="object_name" property="objectName" jdbcType="VARCHAR" />
    <result column="waiting_thread_id" property="waitingThreadId" jdbcType="BIGINT" />
    <result column="waiting_pid" property="waitingPid" jdbcType="BIGINT" />
    <result column="waiting_lock_type" property="waitingLockType" jdbcType="VARCHAR" />
    <result column="waiting_lock_duration" property="waitingLockDuration" jdbcType="VARCHAR" />
    <result column="waiting_query_secs" property="waitingQuerySecs" jdbcType="BIGINT" />
    <result column="waiting_query_rows_affected" property="waitingQueryRowsAffected" jdbcType="BIGINT" />
    <result column="waiting_query_rows_examined" property="waitingQueryRowsExamined" jdbcType="BIGINT" />
    <result column="blocking_thread_id" property="blockingThreadId" jdbcType="BIGINT" />
    <result column="blocking_pid" property="blockingPid" jdbcType="BIGINT" />
    <result column="blocking_lock_type" property="blockingLockType" jdbcType="VARCHAR" />
    <result column="blocking_lock_duration" property="blockingLockDuration" jdbcType="VARCHAR" />
    <result column="sql_kill_blocking_query" property="sqlKillBlockingQuery" jdbcType="VARCHAR" />
    <result column="sql_kill_blocking_connection" property="sqlKillBlockingConnection" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.demo.sq.entity.SchemaTableLockWaitsWithBLOBs" extends="BaseResultMap" >
    <result column="waiting_account" property="waitingAccount" jdbcType="LONGVARCHAR" />
    <result column="waiting_query" property="waitingQuery" jdbcType="LONGVARCHAR" />
    <result column="blocking_account" property="blockingAccount" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Blob_Column_List" >
    waiting_account, waiting_query, blocking_account
  </sql>
  <insert id="insert" parameterType="com.example.demo.sq.entity.SchemaTableLockWaitsWithBLOBs" >
    insert into schema_table_lock_waits (object_schema, object_name, waiting_thread_id, 
      waiting_pid, waiting_lock_type, waiting_lock_duration, 
      waiting_query_secs, waiting_query_rows_affected, 
      waiting_query_rows_examined, blocking_thread_id, 
      blocking_pid, blocking_lock_type, blocking_lock_duration, 
      sql_kill_blocking_query, sql_kill_blocking_connection, 
      waiting_account, waiting_query, blocking_account
      )
    values (#{objectSchema,jdbcType=VARCHAR}, #{objectName,jdbcType=VARCHAR}, #{waitingThreadId,jdbcType=BIGINT}, 
      #{waitingPid,jdbcType=BIGINT}, #{waitingLockType,jdbcType=VARCHAR}, #{waitingLockDuration,jdbcType=VARCHAR}, 
      #{waitingQuerySecs,jdbcType=BIGINT}, #{waitingQueryRowsAffected,jdbcType=BIGINT}, 
      #{waitingQueryRowsExamined,jdbcType=BIGINT}, #{blockingThreadId,jdbcType=BIGINT}, 
      #{blockingPid,jdbcType=BIGINT}, #{blockingLockType,jdbcType=VARCHAR}, #{blockingLockDuration,jdbcType=VARCHAR}, 
      #{sqlKillBlockingQuery,jdbcType=VARCHAR}, #{sqlKillBlockingConnection,jdbcType=VARCHAR}, 
      #{waitingAccount,jdbcType=LONGVARCHAR}, #{waitingQuery,jdbcType=LONGVARCHAR}, #{blockingAccount,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.sq.entity.SchemaTableLockWaitsWithBLOBs" >
    insert into schema_table_lock_waits
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="objectSchema != null" >
        object_schema,
      </if>
      <if test="objectName != null" >
        object_name,
      </if>
      <if test="waitingThreadId != null" >
        waiting_thread_id,
      </if>
      <if test="waitingPid != null" >
        waiting_pid,
      </if>
      <if test="waitingLockType != null" >
        waiting_lock_type,
      </if>
      <if test="waitingLockDuration != null" >
        waiting_lock_duration,
      </if>
      <if test="waitingQuerySecs != null" >
        waiting_query_secs,
      </if>
      <if test="waitingQueryRowsAffected != null" >
        waiting_query_rows_affected,
      </if>
      <if test="waitingQueryRowsExamined != null" >
        waiting_query_rows_examined,
      </if>
      <if test="blockingThreadId != null" >
        blocking_thread_id,
      </if>
      <if test="blockingPid != null" >
        blocking_pid,
      </if>
      <if test="blockingLockType != null" >
        blocking_lock_type,
      </if>
      <if test="blockingLockDuration != null" >
        blocking_lock_duration,
      </if>
      <if test="sqlKillBlockingQuery != null" >
        sql_kill_blocking_query,
      </if>
      <if test="sqlKillBlockingConnection != null" >
        sql_kill_blocking_connection,
      </if>
      <if test="waitingAccount != null" >
        waiting_account,
      </if>
      <if test="waitingQuery != null" >
        waiting_query,
      </if>
      <if test="blockingAccount != null" >
        blocking_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="objectSchema != null" >
        #{objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="objectName != null" >
        #{objectName,jdbcType=VARCHAR},
      </if>
      <if test="waitingThreadId != null" >
        #{waitingThreadId,jdbcType=BIGINT},
      </if>
      <if test="waitingPid != null" >
        #{waitingPid,jdbcType=BIGINT},
      </if>
      <if test="waitingLockType != null" >
        #{waitingLockType,jdbcType=VARCHAR},
      </if>
      <if test="waitingLockDuration != null" >
        #{waitingLockDuration,jdbcType=VARCHAR},
      </if>
      <if test="waitingQuerySecs != null" >
        #{waitingQuerySecs,jdbcType=BIGINT},
      </if>
      <if test="waitingQueryRowsAffected != null" >
        #{waitingQueryRowsAffected,jdbcType=BIGINT},
      </if>
      <if test="waitingQueryRowsExamined != null" >
        #{waitingQueryRowsExamined,jdbcType=BIGINT},
      </if>
      <if test="blockingThreadId != null" >
        #{blockingThreadId,jdbcType=BIGINT},
      </if>
      <if test="blockingPid != null" >
        #{blockingPid,jdbcType=BIGINT},
      </if>
      <if test="blockingLockType != null" >
        #{blockingLockType,jdbcType=VARCHAR},
      </if>
      <if test="blockingLockDuration != null" >
        #{blockingLockDuration,jdbcType=VARCHAR},
      </if>
      <if test="sqlKillBlockingQuery != null" >
        #{sqlKillBlockingQuery,jdbcType=VARCHAR},
      </if>
      <if test="sqlKillBlockingConnection != null" >
        #{sqlKillBlockingConnection,jdbcType=VARCHAR},
      </if>
      <if test="waitingAccount != null" >
        #{waitingAccount,jdbcType=LONGVARCHAR},
      </if>
      <if test="waitingQuery != null" >
        #{waitingQuery,jdbcType=LONGVARCHAR},
      </if>
      <if test="blockingAccount != null" >
        #{blockingAccount,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
</mapper>