<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.sq.mappers.ForumDictionaryMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.sq.entity.ForumDictionary" >
    <id column="dict_id" property="dictId" jdbcType="INTEGER" />
    <result column="dict_group" property="dictGroup" jdbcType="VARCHAR" />
    <result column="dict_key" property="dictKey" jdbcType="VARCHAR" />
    <result column="dict_value" property="dictValue" jdbcType="VARCHAR" />
    <result column="dict_parent" property="dictParent" jdbcType="VARCHAR" />
    <result column="dict_order" property="dictOrder" jdbcType="INTEGER" />
    <result column="dict_isleaf" property="dictIsleaf" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    dict_id, dict_group, dict_key, dict_value, dict_parent, dict_order, dict_isleaf
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from forum_dictionary
    where dict_id = #{dictId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from forum_dictionary
    where dict_id = #{dictId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.sq.entity.ForumDictionary" >
    insert into forum_dictionary (dict_id, dict_group, dict_key, 
      dict_value, dict_parent, dict_order, 
      dict_isleaf)
    values (#{dictId,jdbcType=INTEGER}, #{dictGroup,jdbcType=VARCHAR}, #{dictKey,jdbcType=VARCHAR}, 
      #{dictValue,jdbcType=VARCHAR}, #{dictParent,jdbcType=VARCHAR}, #{dictOrder,jdbcType=INTEGER}, 
      #{dictIsleaf,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.sq.entity.ForumDictionary" >
    insert into forum_dictionary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dictId != null" >
        dict_id,
      </if>
      <if test="dictGroup != null" >
        dict_group,
      </if>
      <if test="dictKey != null" >
        dict_key,
      </if>
      <if test="dictValue != null" >
        dict_value,
      </if>
      <if test="dictParent != null" >
        dict_parent,
      </if>
      <if test="dictOrder != null" >
        dict_order,
      </if>
      <if test="dictIsleaf != null" >
        dict_isleaf,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dictId != null" >
        #{dictId,jdbcType=INTEGER},
      </if>
      <if test="dictGroup != null" >
        #{dictGroup,jdbcType=VARCHAR},
      </if>
      <if test="dictKey != null" >
        #{dictKey,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null" >
        #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="dictParent != null" >
        #{dictParent,jdbcType=VARCHAR},
      </if>
      <if test="dictOrder != null" >
        #{dictOrder,jdbcType=INTEGER},
      </if>
      <if test="dictIsleaf != null" >
        #{dictIsleaf,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.sq.entity.ForumDictionary" >
    update forum_dictionary
    <set >
      <if test="dictGroup != null" >
        dict_group = #{dictGroup,jdbcType=VARCHAR},
      </if>
      <if test="dictKey != null" >
        dict_key = #{dictKey,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null" >
        dict_value = #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="dictParent != null" >
        dict_parent = #{dictParent,jdbcType=VARCHAR},
      </if>
      <if test="dictOrder != null" >
        dict_order = #{dictOrder,jdbcType=INTEGER},
      </if>
      <if test="dictIsleaf != null" >
        dict_isleaf = #{dictIsleaf,jdbcType=CHAR},
      </if>
    </set>
    where dict_id = #{dictId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.sq.entity.ForumDictionary" >
    update forum_dictionary
    set dict_group = #{dictGroup,jdbcType=VARCHAR},
      dict_key = #{dictKey,jdbcType=VARCHAR},
      dict_value = #{dictValue,jdbcType=VARCHAR},
      dict_parent = #{dictParent,jdbcType=VARCHAR},
      dict_order = #{dictOrder,jdbcType=INTEGER},
      dict_isleaf = #{dictIsleaf,jdbcType=CHAR}
    where dict_id = #{dictId,jdbcType=INTEGER}
  </update>
</mapper>